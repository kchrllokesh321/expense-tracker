name: Build and Deploy to MicroK8s

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: lokesh86186
  IMAGE_NAME: react
  KUBE_SERVER: 45.128.86.68
  DEPLOYMENT_NAME: react-deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3Ô∏è‚É£ Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .
        docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    # 4Ô∏è‚É£ Setup SSH key
    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 5Ô∏è‚É£ Add server to known hosts
    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ env.KUBE_SERVER }} >> ~/.ssh/known_hosts

    # 6Ô∏è‚É£ Deploy to MicroK8s
    - name: Deploy to MicroK8s
      run: |
        # Update deployment.yaml image
        sed -i "s|image:.*|image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest|g" deployment.yaml

        # Copy YAML files to server
        scp -o StrictHostKeyChecking=no secret.yaml deployment.yaml service.yaml root@${{ env.KUBE_SERVER }}:/tmp/

        # Apply all resources
        ssh -o StrictHostKeyChecking=no root@${{ env.KUBE_SERVER }} << 'EOF'
          echo "Applying Kubernetes secrets..."
          microk8s kubectl apply -f /tmp/secret.yaml

          echo "Applying deployment..."
          microk8s kubectl apply -f /tmp/deployment.yaml

          echo "Applying service..."
          microk8s kubectl apply -f /tmp/service.yaml

          echo "Waiting for deployment rollout..."
          microk8s kubectl rollout status deployment/react-deployment --timeout=300s

          echo "Listing pods and services..."
          microk8s kubectl get pods -l app=react-app
          microk8s kubectl get svc react-service

          echo "Cleaning up temporary files..."
          rm -f /tmp/secret.yaml /tmp/deployment.yaml /tmp/service.yaml
        EOF

    # 7Ô∏è‚É£ Deployment summary
    - name: Deployment Summary
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üì¶ Docker Image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
        echo "üéØ Server: ${{ env.KUBE_SERVER }}"
